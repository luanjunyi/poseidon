#! /usr/bin/python
# -*- coding: utf-8 -*-
import sys, os, traceback
sys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/../../') # Paracode root
from taras import taras
from util.log import _logger

def check_one_account(argv):
    daemon = taras.WeiboDaemon(noselenium=True)
    try:
        _logger.debug('%s:%s' % (argv[0], argv[1]))
        api = daemon.get_api_on_the_fly(argv[0], argv[1])
        print '很健康，她的昵称是 (%s)' % api.me().name.encode('utf-8')
    except Exception, err:
        print '这个的ID可能用不了: %s<br/>%s' % (err, traceback.format_exc())
    finally:
        daemon.shutdown()

def check_all_accounts():
    daemon = taras.WeiboDaemon(noselenium=True, mysql_host="220.113.33.63")

    local_daemon = taras.WeiboDaemon(noselenium=True, mysql_host="192.168.1.200")

    for user in daemon.agent.get_all_user_including_disabled():
        try:
            api = daemon.get_api_by_user(user.uname)
            local_copy = local_daemon.agent.get_user_by_email(user.uname)
            if local_copy == None or not local_copy.enabled:
                _logger.debug('good: (%s:%s) %s' % (user.uname, user.passwd, api.me().name))
            else:
                _logger.debug('used: (%s:%s) %s' % (user.uname, user.passwd, api.me().name))
        except Exception, err:
            _logger.debug('bad: (%s, %s) %s' % (user.uname, user.passwd, err))
    daemon.shutdown()


if __name__ == "__main__":
    if sys.argv[1] == '--all':
        check_all_accounts()
    else:
        check_one_account(sys.argv[1:])
